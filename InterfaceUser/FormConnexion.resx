<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>